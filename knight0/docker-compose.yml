version: "3.7"
########################### Networks
networks:
  local1:
    name: local1
    ipam:
      driver: default
      config:
        - subnet: "192.168.10.0/24"
  # marketplace:
  #   external: true
  # warehouse:
  #   external: true
  # local0:
  #   driver: bridge    
  #   ipam:
  #     config:
  #       - subnet: 192.168.0.0/24
  # rollcall:
  #   driver: macvlan
  #   driver_opts: 
  #     parent: wlan0
  #   ipam:
  #     config: 
  #       - subnet: 192.168.1.0/24

########################### Volumes
volumes:
  snipecache:
  snipedb:
  snipeit:

services:
  agent:
    ports:
        - '9001:9001'
    container_name: portainer_agent
    networks:
      local1:
        ipv4_address: 192.168.10.80
    restart: always
    volumes:
        - '/var/run/docker.sock:/var/run/docker.sock'
        - '/var/lib/docker/volumes:/var/lib/docker/volumes'
    image: portainer/agent

  socketproxy:
    container_name: socketproxy
    image: tecnativa/docker-socket-proxy
    restart: always
    privileged: true
    ports:
      - '2376:2375'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  snipe-redis:
    image: redis:6.2-alpine
    container_name: snipe-redis
    networks:
      local1:
        ipv4_address: 192.168.10.82
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning
    volumes: 
      - snipecache:/data

  snipe-it:
    image: lscr.io/linuxserver/snipe-it:latest
    container_name: snipe-it
    networks:
      local1:
        ipv4_address: 192.168.10.83
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ}
      - APP_URL=https://assets.${DOMAINNAME}
      - MYSQL_PORT_3306_TCP_ADDR=192.168.1.11
      - MYSQL_PORT_3306_TCP_PORT=3309
      - MYSQL_DATABASE=snipeit
      - MYSQL_USER=snipeit
      - MYSQL_PASSWORD=4p4PikzLsCSTbpoU2pU7
    volumes:
      - ${DATADIR}/snipeit:/config
    ports:
      - 8081:80
    depends_on:
      - snipe-redis
    restart: unless-stopped

  openvscode-server:
    image: lscr.io/linuxserver/openvscode-server:latest
    container_name: openvscode-server
    networks:
      local1:
        ipv4_address: 192.168.10.84
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ}
      # - CONNECTION_TOKEN= #optional
      # - CONNECTION_SECRET= #optional
      - SUDO_PASSWORD=${SUDOPASSWD} #optional
      # - SUDO_PASSWORD_HASH= #optional
    volumes:
      - ${DATADIR}/openvscode/config:/config
      - ${DATADIR}:/data
    ports:
      - 3000:3000
    restart: unless-stopped

  # swag:
  #   image: ghcr.io/linuxserver/swag
  #   container_name: swag
  #   cap_add:
  #     - NET_ADMIN
  #   environment:
  #     - TZ=$TZ #change to your timezone
  #     - URL=${DOMAINNAME} #change to the domain you want to protect with a certificate
  #     - SUBDOMAINS=wildcard
  #     - VALIDATION=dns
  #     - DNSPLUGIN=cloudflare
  #     - EMAIL=${DNSEMAIL} #change, can be any email address
  #     - ONLY_SUBDOMAINS=false
  #     # - MAXMINDDB_LICENSE_KEY=$MAXMINDDB #remove if not necessary
  #     - DOCKER_MODS=linuxserver/mods:swag-cloudflare-real-ip|linuxserver/mods:swag-auto-reload|linuxserver/mods:universal-docker|linuxserver/mods:swag-auto-proxy
  #   volumes:
  #     - ${DATADIR}/swag:/config
  #     - /var/run/docker.sock:/var/run/docker.sock:ro 
  #   ports:
  #     - 18443:443
  #     - 1880:80
  #   restart: unless-stopped
  #   networks:
  #     local1:
  #       ipv4_address: 192.168.10.85