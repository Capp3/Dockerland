########################### Networks
networks:
  local1:
    name: local1
    ipam:
      driver: default
      config:
        - subnet: "192.168.10.0/24"
  # marketplace:
  #   external: true
  # warehouse:
  #   external: true
  # local0:
  #   driver: bridge    
  #   ipam:
  #     config:
  #       - subnet: 192.168.0.0/24
  # rollcall:
  #   driver: macvlan
  #   driver_opts: 
  #     parent: wlan0
  #   ipam:
  #     config: 
  #       - subnet: 192.168.1.0/24

########################### Volumes
volumes:
  readsbpb_rrd:
  readsbpb_autogain:
  node-red-data:

########################### SERVICES
services: 

  readsb:
    image: ghcr.io/sdr-enthusiasts/docker-readsb-protobuf:latest
    tty: true
    container_name: readsb
    hostname: readsb
    restart: always
    devices:
      - /dev/bus/usb:/dev/bus/usb
    ports:
      - 8090:8080
      - 30005:30005
    networks:
      local1:
        ipv4_address: 192.168.10.102
    environment:
      - TZ=${TZ}
      - READSB_DCFILTER=true
      - READSB_DEVICE_TYPE=rtlsdr
      - READSB_FIX=true
      - READSB_GAIN=autogain
      - READSB_LAT=${LAT}
      - READSB_LON=${LONG}
      - READSB_MODEAC=true
      - READSB_RX_LOCATION_ACCURACY=2
      - READSB_STATS_RANGE=true
      - READSB_NET_ENABLE=true
    volumes:
      - readsbpb_rrd:/run/collectd
      - readsbpb_autogain:/run/autogain
    tmpfs:
      - /run/readsb:size=64M
      - /var/log:size=32M

  adsbexchange:
    image: ghcr.io/sdr-enthusiasts/docker-adsbexchange:latest
    tty: true
    container_name: adsbx
    networks:
      local1:
        ipv4_address: 192.168.10.103
    restart: always
    depends_on:
      - readsb
    environment:
      - BEASTHOST=192.168.10.63
      - TZ=${TZ}
      - LAT=${LAT}
      - LONG=${LONG}
      - ALT=${ALT}
      - SITENAME=${ADSBSITENAME}
      - UUID=${ADSBUUID}
    tmpfs:
      - /run:rw,nosuid,nodev,exec,relatime,size=64M,uid=1000,gid=1000

  socket-proxy:
    container_name: socket-proxy
    image: tecnativa/docker-socket-proxy
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    # profiles: ["core", "all"] 
    networks:
      local1:
    privileged: true # true for VM. false for unprivileged LXC container on Proxmox.
    ports:
      - 2375:2375 # Do not expose this to the internet with port forwarding
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    environment:
      - LOG_LEVEL=info # debug,info,notice,warning,err,crit,alert,emerg
      ## Variables match the URL prefix (i.e. AUTH blocks access to /auth/* parts of the API, etc.).
      # 0 to revoke access.
      # 1 to grant access.
      ## Granted by Default
      - EVENTS=1
      - PING=1
      - VERSION=1
      ## Revoked by Default
      # Security critical
      - AUTH=0
      - SECRETS=0
      - POST=1 # Watchtower
      # Not always needed
      - BUILD=0
      - COMMIT=0
      - CONFIGS=0
      - CONTAINERS=1 # Traefik, Portainer, etc.
      - DISTRIBUTION=0
      - EXEC=0
      - IMAGES=1 # Portainer
      - INFO=1 # Portainer
      - NETWORKS=1 # Portainer
      - NODES=0
      - PLUGINS=0
      - SERVICES=1 # Portainer
      - SESSION=0
      - SWARM=0
      - SYSTEM=0
      - TASKS=1 # Portainer
      - VOLUMES=1 # Portainer

  # Docker-GC - Automatic Docker Garbage Collection
  # Create docker-gc-exclude file
  docker-gc:
    image: clockworksoul/docker-gc-cron:latest
    container_name: docker-gc
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    profiles: ["apps", "all"]
    networks:
      local1:
    volumes:
      # - /var/run/docker.sock:/var/run/docker.sock # Use Docker Socket Proxy instead for improved security
      - ${DATA_DIR}/docker-gc/docker-gc-exclude:/etc/docker-gc-exclude
    environment:
      CRON: 12 0 0 * * ? # Everyday at midnight.
      FORCE_IMAGE_REMOVAL: 1
      FORCE_CONTAINER_REMOVAL: 0
      GRACE_PERIOD_SECONDS: 604800
      DRY_RUN: 0
      CLEAN_UP_VOLUMES: 1
      TZ: $TZ
      DOCKER_HOST: tcp://socket-proxy:2375
