version: "3.7"
########################### Networks
networks:
  marketplace:
    name: marketplace
    ipam:
      driver: default
      config:
        - subnet: "192.168.10.0/24"

  dockervlan:
    name: dockervlan
    driver: macvlan
    driver_opts:
      parent: enp1s0
    ipam:
      config:
        - subnet: "192.168.1.0/24"

########################### SERVICES
services:
  watchtower:
    container_name: pcd0_watchtower
    image: containrrr/watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      marketplace:
        ipv4_address: 192.168.10.10
    tty: true

  portainer-ce:
    ports:
      - '8000:8000'
      - '9000:9000'
    container_name: pcd0_portainer
    restart: always
    # healthcheck:
    #   test: curl -sS http://localhost:9000 || exit 1
    #   interval: 60s
    #   retries: 5
    #   start_period: 20s
    #   timeout: 10s
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
      - 'portainer_data:/data'
    image: portainer/portainer-ce
    networks:
      marketplace:
        ipv4_address: 192.168.10.11
    tty: true
    depends_on:
      - agent

  agent:
    ports:
      - '9001:9001'
    container_name: pcd0_portainer_agent
    restart: always
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
      - '/var/lib/docker/volumes:/var/lib/docker/volumes'
    image: portainer/agent
    networks:
      marketplace:
        ipv4_address: 192.168.10.12
    tty: true

  duplicati:
    image: lscr.io/linuxserver/duplicati
    container_name: pcd0_duplicati
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Dublin
      # - CLI_ARGS= #optional
    volumes:
      - ${DATADIR}/duplicati/config:/config
      - ${DATADIR}/duplicati/backups:/backups
      - ${DATADIR}/duplicati/source:/source
      - /local:/localdata
      - /var/lib/docker/volumes:/dockerdata
    ports:
      - ${DUPLCATI_PORT}:8200
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8200"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      marketplace:
        ipv4_address: 192.168.10.13
    tty: true

  adguardhome:
    image: adguard/adguardhome
    container_name: pcd0_adguardhome
    networks:
      dockervlan:
        ipv4_address: ${ADAWARE_IP}
    healthcheck:
      test: "/bin/netstat -pant | /bin/grep 53"
      interval: 45s
      timeout: 30s
      retries: 3
    ports:
      - 53:53/tcp
      - 53:53/udp
      - 784:784/udp
      - 853:853/tcp
      - 3000:3000/tcp
      - 80:80/tcp
      - 443:443/tcp
    volumes:
      - ${LOCALDATADIR}/adguard/workdir:/opt/adguardhome/work
      - ${LOCALDATADIR}/adguard/confdir:/opt/adguardhome/conf
    restart: unless-stopped

  nginxpm:
    container_name: pcd0_proxymanager
    image: 'jc21/nginx-proxy-manager:latest'
    restart: unless-stopped
    volumes:
      - nginxpm_data:/data
      - ${LOCALDATADIR}/nginxpm/letsencrypt:/etc/letsencrypt
    networks:
      marketplace:
        ipv4_address: 192.168.10.21
    ports:
      - '80:80'
      - '443:443'
      - '81:81'
    healthcheck:
      test: ["CMD", "/bin/check-health"]
      interval: 10s
      timeout: 3s

  heimdall:
    image: lscr.io/linuxserver/heimdall:latest
    container_name: pcd0_heimdall
    networks:
      marketplace:
        ipv4_address: 192.168.10.22
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ}
    volumes:
      - ${LOCALDATADIR}/heimdall/config:/config
    ports:
      - 8080:80
      - 8443:443
    healthcheck:
      test: curl --fail http://localhost:8080 || exit 1
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
  
  pictshare:
    image: hascheksolutions/pictshare  
    container_name: pcd0_pictshare
    networks:
      marketplace:
        ipv4_address: 192.168.10.23
    environment:
      - MAX_UPLOAD_SIZE=50
      - TITLE="Doms Paste Place"
      - URL=https://paste.capparelli.ie
      - SHOW_ERRORS=true
    healthcheck:
      test: curl --fail http://localhost:8082 || exit 1
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
    ports:
      - '8082:80'
    restart: unless-stopped



########################### volumes
volumes:
  portainer_data:
  nginxpm_data: