version: "3.7"
########################### Networks
networks:
  marketplace:
    driver: bridge

  dockervlan:
    name: dockervlan
    driver: macvlan
    driver_opts:
      parent: enp1s0
    ipam:
      config:
        - subnet: "192.168.1.0/24"
          # ip_range: "192.168.1.252/31"
          # gateway: "192.168.1.1"

########################### SERVICES
services:

  watchtower:
    container_name: pcd0_watchtower
    image: containrrr/watchtower 
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  portainer-ce:
    ports:
        - '8000:8000'
        - '9000:9000'
    container_name: pcd0_portainer
    restart: always
    volumes:
        - '/var/run/docker.sock:/var/run/docker.sock'
        - 'portainer_data:/data'
    image: portainer/portainer-ce

  agent:
    ports:
        - '9001:9001'
    container_name: pcd0_portainer_agent
    restart: always
    volumes:
        - '/var/run/docker.sock:/var/run/docker.sock'
        - '/var/lib/docker/volumes:/var/lib/docker/volumes'
    image: portainer/agent

  duplicati:
    image: lscr.io/linuxserver/duplicati
    container_name: pcd0_duplicati
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Dublin
      # - CLI_ARGS= #optional
    volumes:
      - ${DATADIR}/duplicati/config:/config
      - ${DATADIR}/duplicati/backups:/backups
      - ${DATADIR}/duplicati/source:/source
      - /local:/localdata
    ports:
      - 8200:8200
    restart: unless-stopped

  # wireguard:
  #   container_name: pcd0_wireguard
  #   cap_add:
  #     - NET_ADMIN 
  #     - SYS_MODULE
  #   sysctls:
  #     - net.ipv4.conf.all.src_valid_mark=1
  #     - net.ipv4.ip_forward=1
  #     - net.ipv6.conf.all.forwarding=1
  #   environment:
  #     - PUID=1000
  #     - PGID=1000
  #     - TZ=${TZ}
  #     - SERVERURL=${WCDOMAIN}
  #     - SERVERPORT=${WCSERVERPORT}
  #     - PEERS=${PEERS}
  #     - PEERDNS=8.8.8.8
  #     # - INTERNAL_SUBNET=${WCINTERNALIP}
  #     - ALLOWEDIPS=${VCALLOWEDIPS}
  #   ports:
  #     - ${WCSERVERPORT}:51820/udp
  #   volumes:
  #     - ${DATADIR}/wireguard/config:/config
  #     - /lib/modules:/lib/modules
  #   restart: unless-stopped
  #   image: linuxserver/wireguard

  pihole:
    container_name: pcd0_pihole
    image: pihole/pihole:latest
    networks:
      dockervlan:
        ipv4_address: 192.168.1.254
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "67:67/udp" # Only required if you are using Pi-hole as your DHCP server
      - "80:80/tcp"
    environment:
      TZ: ${TZ}
      WEBPASSWORD: ${PIHOLEGUIPASSWORD}
      PIHOLE_DNS_: 1.1.1.1;8.8.8.8
      WEBTHEME: "default-auto"
    volumes:
      - 'pihole_etc-pihole:/etc/pihole'
      - 'pihole_etc-dnsmasq.d:/etc/dnsmasq.d'    
    cap_add:
      - NET_ADMIN
    restart: unless-stopped

  nginxpm:
    container_name: pcd0_proxymanager
    image: 'jc21/nginx-proxy-manager:latest'
    restart: unless-stopped
    ports:
      - '80:80' # Public HTTP Port
      - '443:443' # Public HTTPS Port
      - '81:81'
    volumes:
      - nginxpm_data:/data
      - /local/data/nginxpm/letsencrypt:/etc/letsencrypt
      
  antennas:
    container_name: pcd0_antennas
    environment:
        - 'ANTENNAS_URL=http://192.168.1.11:5004'
        - 'TVHEADEND_URL=http://pi:homeland@192.168.1.13:9981'
        - TUNER_COUNT=1
    ports:
        - '5004:5004'
    image: thejf/antennas


########################### volumes
volumes:
  nginxpm_data:
  portainer_data:
  pihole_etc-pihole:
  pihole_etc-dnsmasq.d: