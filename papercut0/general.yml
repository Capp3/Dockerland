version: "3.7"
########################### Networks
networks:
  marketplace:
    driver: bridge

  dockervlan:
    name: dockervlan
    driver: macvlan
    driver_opts:
      parent: eth0
    ipam:
      config:
        - subnet: "192.168.1.0/24"
          # ip_range: "192.168.1.252/31"
          # gateway: "192.168.1.1"

########################### SERVICES
services:

  watchtower:
    image: containrrr/watchtower 
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  portainer-ce:
    ports:
        - '8000:8000'
        - '9000:9000'
    container_name: portainer
    restart: always
    volumes:
        - '/var/run/docker.sock:/var/run/docker.sock'
        - 'portainer_data:/data'
    image: portainer/portainer-ce

  agent:
    ports:
        - '9001:9001'
    container_name: portainer_agent
    restart: always
    volumes:
        - '/var/run/docker.sock:/var/run/docker.sock'
        - '/var/lib/docker/volumes:/var/lib/docker/volumes'
    image: portainer/agent

  duplicati:
    image: lscr.io/linuxserver/duplicati
    container_name: duplicati
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Dublin
      # - CLI_ARGS= #optional
    volumes:
      - ${DATADIR}/duplicati/config:/config
      - ${DATADIR}/duplicati/backups:/backups
      - ${DATADIR}/duplicati/source:/source
      - /local:/localdata
    ports:
      - 8200:8200
    restart: unless-stopped

  wireguard:
    container_name: wireguard
    environment:
        - PUID=1000
        - PGID=1000
        - TZ=${TZ}
        - SERVERURL=${WCDOMAIN}
        - SERVERPORT=${WCSERVERPORT}
        - PEERS=${PEERS}
        - PEERDNS=auto
        - INTERNAL_SUBNET=${WCINTERNALIP}
        - ALLOWEDIPS=${VCALLOWEDIPS}
    ports:
        - ${WCSERVERPORT}:51820/udp
    volumes:
        - ${DATADIR}/wireguard/config:/config
        - /lib/modules:/lib/modules
    restart: unless-stopped
    image: linuxserver/wireguard

  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    networks:
      dockervlan:
        ipv4_address: 192.168.1.254
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "67:67/udp" # Only required if you are using Pi-hole as your DHCP server
      - "80:80/tcp"
    environment:
      TZ: ${TZ}
      WEBPASSWORD: ${PIHOLEGUIPASSWORD}
    volumes:
      - '/local/data/pihole/etc-pihole:/etc/pihole'
      - '/local/data/pihole/etc-dnsmasq.d:/etc/dnsmasq.d'    
    cap_add:
      - NET_ADMIN
    restart: unless-stopped

  db_recipes:
    restart: always
    image: postgres:11-alpine
    volumes:
      - /local/data/eat/postgresql:/var/lib/postgresql/data
    env_file:
      - ./.eatenv

  web_recipes:
    image: vabene1111/recipes
    env_file:
      - ./.env
    volumes:
      - /local/data/eat/staticfiles:/opt/recipes/staticfiles
      - /local/data/eat/nginx_config:/opt/recipes/nginx/conf.d
      - /local/data/eat/mediafiles:/opt/recipes/mediafiles
    depends_on:
      - db_recipes

  nginx_recipes:
    image: nginx:mainline-alpine
    restart: always
    ports:
      - 80:80
    env_file:
      - ./.eatenv
    depends_on:
      - web_recipes
    volumes:
      - /local/data/eat/nginx_config:/etc/nginx/conf.d:ro
      - /local/data/eat/staticfiles:/static
      - /local/data/eat/mediafiles:/media




########################### volumes
volumes:
  portainer_data: