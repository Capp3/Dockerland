########################### Networks
networks:
  local1:
    name: local1
    ipam:
      driver: default
      config:
        - subnet: "192.168.10.0/24"
  # marketplace:
  #   external: true
  # warehouse:
  #   external: true
  # local0:
  #   driver: bridge    
  #   ipam:
  #     config:
  #       - subnet: 192.168.0.0/24
  # rollcall:
  #   driver: macvlan
  #   driver_opts: 
  #     parent: wlan0
  #   ipam:
  #     config: 
  #       - subnet: 192.168.1.0/24

########################### Volumes
volumes:
  readsbpb_rrd:
  readsbpb_autogain:

########################### SERVICES
services: 
  tvheadend:
    image: lscr.io/linuxserver/tvheadend:latest
    container_name: tvheadend
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - RUN_OPTS= --http_root /tvheadend
    volumes:
      - /opt/docker/tvheadend/data:/config
      - /home/server/recordings:/recordings
    ports:
      - 9981:9981
      - 9982:9982
    devices:
      - /dev/dri:/dev/dri #optional
      - /dev/dvb:/dev/dvb #optional
    restart: unless-stopped

  antennas:
    container_name: antennas
    environment:
      - ANTENNAS_URL=http://192.168.1.221:5004
      - TVHEADEND_URL=http://192.168.2.221:9981
      - TUNER_COUNT=1
    ports:
      - 5004:5004
    image: thejf/antennas

  agent:
    ports:
        - '9001:9001'
    container_name: portainer_agent
    networks:
      local1:
        ipv4_address: 192.168.10.60
    restart: always
    volumes:
        - '/var/run/docker.sock:/var/run/docker.sock'
        - '/var/lib/docker/volumes:/var/lib/docker/volumes'
    image: portainer/agent

  socketproxy:
    container_name: socketproxy
    image: tecnativa/docker-socket-proxy
    restart: always
    privileged: true
    ports:
      - '2376:2375'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  cloudflare-ddns-capparelli:
    container_name: ddns_capparelli
    image: oznu/cloudflare-ddns:latest
    restart: always
    networks:
      local1:
        ipv4_address: 192.168.10.61
    environment:
      - API_KEY=${CFDDNS0}
      - ZONE=${CFDDN_ZONE_0}

  # tdarr-node:
  #   container_name: tdarr-node
  #   image: ghcr.io/haveagitgat/tdarr_node:latest
  #   restart: unless-stopped
  #   networks:
  #     local1:
  #       ipv4_address: 192.168.10.67
  #   environment:
  #     - TZ=Europe/Dublin
  #     - PUID=${PUID}
  #     - PGID=${PGID}
  #     - UMASK_SET=002
  #     - nodeID=scoutnode
  #     - serverIP=192.168.1.11
  #     - serverPort=8266
  #   volumes:
  #     - /docker/tdarr/configs:/app/configs
  #     - /docker/tdarr/logs:/app/logs
  #     - /media:/media
  #     - /transcode_cache:/temp