version: "3.7"
########################### Networks
# networks:
#   local1:
#     name: local1
#     ipam:
#       driver: default
#       config:
#         - subnet: "192.168.10.0/24"

########################### Volumes
# volumes:

services:
  agent:
    ports:
        - '9001:9001'
    container_name: portainer_agent
    # networks:
    #   local1:
    #     ipv4_address: 192.168.10.90
    restart: always
    volumes:
        - '/var/run/docker.sock:/var/run/docker.sock'
        - '/var/lib/docker/volumes:/var/lib/docker/volumes'
    image: portainer/agent

  server:
    image: tryton/tryton:${VERSION:-latest}
    environment:
      - DB_PASSWORD=${DB_PASSWORD}
      - PASSWORD=${ADMIN_PASSWORD}
    ports:
      - "8000:8000"
    volumes:
      - "tryton-data:/var/lib/trytond/db"
    command:
      - /bin/bash
      - -c
      - |
        (until echo > /dev/tcp/$${DB_HOSTNAME:=$${POSTGRES_PORT_5432_TCP_ADDR:='postgres'}}/$${DB_PORT:=$${POSTGRES_PORT_5432_TCP_PORT:='5432'}}; do sleep 0.5; done) 2>/dev/null
        echo "${PASSWORD:-admin}" > /tmp/.passwd
        TRYTONPASSFILE=/tmp/.passwd /entrypoint.sh trytond-admin -d "${DB_NAME:-tryton}" --all --email "${EMAIL:-admin}" -vv
        if command -v uwsgi &>/dev/null; then uwsgi --ini /etc/uwsgi.conf; else gunicorn --config=/etc/gunicorn.conf.py; fi
    depends_on:
      - postgres
  cron:
    image: tryton/tryton:${VERSION:-latest}
    environment:
      - DB_PASSWORD=${DB_PASSWORD}
    volumes:
      - "tryton-data:/var/lib/trytond/db"
    command:
      - /bin/bash
      - -c
      - |
        (until echo > /dev/tcp/tryton/8000; do sleep 0.5; done) 2>/dev/null
        trytond-cron -d "${DB_NAME:-tryton}"
    depends_on:
      - postgres
      - server
  postgres:
    image: postgres:${PG_VERSION:-latest}
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD:-password}
      - POSTGRES_DB=${DB_NAME:-tryton}
    volumes:
      - "postgres-data:/var/lib/postgresql/data"

volumes:
  postgres-data:
  tryton-data:
