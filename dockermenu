#!/usr/bin/env bash
# Docker Management TUI Helper (DMTH) - Main Entry Script
# Version: 1.0
# This script provides a TUI for managing Docker and Docker Compose operations

# Ensure the script exits if any command fails
set -e

# Script directory - resolves symlinks
SCRIPT_DIR=$(cd "$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")" && pwd)

# Configuration directory
CONFIG_DIR="${HOME}/.dmth"
MASTER_ENV="${CONFIG_DIR}/master.env"

# Color definitions
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Logging
log_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

log_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

log_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# Check dependencies
check_dependencies() {
    log_info "Checking dependencies..."

    local missing_deps=()

    # Required commands
    local required_commands=("docker" "whiptail" "hostname")

    for cmd in "${required_commands[@]}"; do
        if ! command -v "$cmd" &> /dev/null; then
            missing_deps+=("$cmd")
        fi
    done

    # Check for Docker Compose
    if ! docker compose version &> /dev/null; then
        missing_deps+=("docker compose plugin")
    fi

    if [ ${#missing_deps[@]} -gt 0 ]; then
        log_error "Missing dependencies: ${missing_deps[*]}"
        echo "Please install the missing dependencies and try again."
        exit 1
    fi

    log_success "All dependencies are installed."
}

# Ensure config directory exists
setup_config() {
    if [ ! -d "$CONFIG_DIR" ]; then
        log_info "Creating configuration directory: $CONFIG_DIR"
        mkdir -p "$CONFIG_DIR"
    fi

    if [ ! -f "$MASTER_ENV" ]; then
        log_info "Creating master environment file: $MASTER_ENV"
        if [ -f "${SCRIPT_DIR}/.env.sample" ]; then
            cp "${SCRIPT_DIR}/.env.sample" "$MASTER_ENV"
            chmod 600 "$MASTER_ENV"
        else
            touch "$MASTER_ENV"
            chmod 600 "$MASTER_ENV"
        fi
    fi
}

# Source the main libraries
source_libraries() {
    local lib_files=(
        "${SCRIPT_DIR}/lib/docker_ops.sh"  # Load this first for hostname function
        "${SCRIPT_DIR}/lib/env_manager.sh"
        "${SCRIPT_DIR}/lib/ui.sh"          # Load UI last as it depends on functions from other libs
    )

    for lib in "${lib_files[@]}"; do
        if [ -f "$lib" ]; then
            # shellcheck disable=SC1090
            source "$lib"
        else
            log_error "Required library not found: $lib"
            exit 1
        fi
    done
}

# Main application entry
main() {
    # Print banner
    echo -e "${BLUE}========================================${NC}"
    echo -e "${BLUE}  Docker Management TUI Helper (DMTH)  ${NC}"
    echo -e "${BLUE}========================================${NC}"

    # Check dependencies
    check_dependencies

    # Setup config directory
    setup_config

    # Source libraries
    source_libraries

    # Start the main menu
    show_main_menu
}

# Run the main function
main "$@"
